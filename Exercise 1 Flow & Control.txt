R version 3.3.1 (2016-06-21) -- "Bug in Your Hair"
Copyright (C) 2016 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin13.4.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> xi <- 1:9
> xi
[1] 1 2 3 4 5 6 7 8 9
> for (a in xi){
+     cat("*&", a)
+ }
*& 1*& 2*& 3*& 4*& 5*& 6*& 7*& 8*& 9
> for (a in xi){
+     cat("\n*&", a)
+ }

*& 1
*& 2
*& 3
*& 4
*& 5
*& 6
*& 7
*& 8
*& 9
> #End of Exercises 1 & 2. Exercise 1 is blank on instruction sheet.
> dogs <- 10;
> for (i in 1:5){
+     dogs <- dogs + 1; 
+ }
> ;
Error: unexpected ';' in ";"
> meatloaf <- 0; 
> for (i in 5:9){
+     meatloaf <- meatloaf - i + 1;
+     cat(meatloaf) 
+ }
-4-9-15-22-30
> ;
Error: unexpected ';' in ";"
> bubbles <- 12;
> for (i in -1:-4){
+     bubbles <- i;
+ }
> 
> bubbles
[1] -4
> #End of Exercise 3.
> #Unsure of point of Ex3.
> ###you can use the if statement with the modulus operator to conditionally perform operations
> years <- c( 2015, 2016, 2018, 2020, 2021)
> for(ii in 1:length(years)){
+     if(years[ii] %% 2 == 0){
+         cat(years[ii], 'Hooray, congressional elections!', sep = '\t', fill = T)
+     }
+     
+ }
2016	Hooray, congressional elections!
2018	Hooray, congressional elections!
2020	Hooray, congressional elections!
> ###you can use the if statement with the modulus operator to conditionally perform operations
> years <- c( 2015, 2016, 2018, 2020, 2021)
> for(ii in 1:length(years)){
+     if(years[ii] %% 2 == 0){
+         cat(years[ii], 'Hooray, congressional elections!', sep = '\t', fill = T)
+     if (years[ii] %% 4 == 0){
+         cat(years[ii], 'Hooray, presidential elections!', sep = '\t', fill = T)
+     }    
+     }
+     
+ }
2016	Hooray, congressional elections!
2016	Hooray, presidential elections!
2018	Hooray, congressional elections!
2020	Hooray, congressional elections!
2020	Hooray, presidential elections!
> #End of Exercise 4.
> bankAccounts <- c(10, 9.2, 5.6, 3.7, 8.8, 0.5);
> 
> #Now look at the error message the following lines of code produce. Can #you think of a way to modify this loop so that the loop will compund #the interest?
> 
> interestRate <- 0.0125;
> for (i in 1:length(bankAccounts)) {
+     compounded[i] <- interestRate*bankAccounts[i] + bankAccounts[i]; }
Error in compounded[i] <- interestRate * bankAccounts[i] + bankAccounts[i] : 
  object 'compounded' not found
> 
> #HINT: variables must be initialized before you can perform operations #on them
> #HINT 2: look at the rep() function and see if you can use that to #initialize a variable that will help you.
> ?rep()
> bankAccounts <- c(10, 9.2, 5.6, 3.7, 8.8, 0.5);
> compounded <- x
Error: object 'x' not found
> interestRate <- 0.0125;
> for (i in 1:length(bankAccounts)) {
+     compounded[i] <- interestRate*bankAccounts[i] + bankAccounts[i]; }
Error in compounded[i] <- interestRate * bankAccounts[i] + bankAccounts[i] : 
  object 'compounded' not found
> 
> 
> bankAccounts <- c(10, 9.2, 5.6, 3.7, 8.8, 0.5);
> compounded <- 0
> interestRate <- 0.0125;
> for (i in 1:length(bankAccounts)) {
+     compounded[i] <- interestRate*bankAccounts[i] + bankAccounts[i]; }
> 
> 
> bankAccounts <- c(10, 9.2, 5.6, 3.7, 8.8, 0.5);
> compounded <- []
Error: unexpected '[' in "compounded <- ["
> interestRate <- 0.0125;
> for (i in 1:length(bankAccounts)) {
+     compounded[i] <- interestRate*bankAccounts[i] + bankAccounts[i]; }
> 
> 
> bankAccounts <- c(10, 9.2, 5.6, 3.7, 8.8, 0.5);
> compounded <- ()
Error: unexpected ')' in "compounded <- ()"
> interestRate <- 0.0125;
> for (i in 1:length(bankAccounts)) {
+     compounded[i] <- interestRate*bankAccounts[i] + bankAccounts[i]; }
> 
> 
> bankAccounts <- c(10, 9.2, 5.6, 3.7, 8.8, 0.5);
> compounded <- 0
> interestRate <- 0.0125;
> for (i in 1:length(bankAccounts)) {
+     compounded[i] <- interestRate*bankAccounts[i] + bankAccounts[i]; }
> 
> 
> bankAccounts <- c(10, 9.2, 5.6, 3.7, 8.8, 0.5);
> compounded <- 0
> interestRate <- 0.0125;
> for (i in 1:length(bankAccounts)) {
+     compounded[i] <- interestRate*bankAccounts[i] + bankAccounts[i]; }
> 
> 
> print(i)
[1] 6
> bankAccounts <- c(10, 9.2, 5.6, 3.7, 8.8, 0.5);
> rep(compounded) <- 0
Error in rep(compounded) <- 0 : could not find function "rep<-"
> interestRate <- 0.0125;
> for (i in 1:length(bankAccounts)) {
+     compounded[i] <- interestRate*bankAccounts[i] + bankAccounts[i]; }
> 
> 
> rep(9)
[1] 9
> rep(9, 9)
[1] 9 9 9 9 9 9 9 9 9
> #Unsure of need for rep() function
> #End of Exercise 5. 
> bankAccounts <- c(10, 9.2, 5.6); #define bank accounts here
> interestRate <- 0.0525;   
> house <- c(4.8, 3.8, 5.7); #deduct
> food<- c(3.5, 4.3, 5.0);    #deduct
> fun <- c(7.8, 2.1, 10.5);  #deduct
> #and incomes (through TAships) of 
> income <- c(21, 21, 21); #add this
> 
> for (j in 1:5) {
+     for (i in 1:length(bankAccounts)) {
+         #step 1 modify bankAccounts so that amounts reflect income and #expenses
+         #step 2 get calculate interest and add to accounts from step 1
+         #you can actually use the line you have already written if you
+         #modify amounts in bankAccounts directly in step 1
+     }
+ bankAccounts <- c(10, 9.2, 5.6) - house - food - fun + income; #define bank accounts here
+ interestRate <- 0.0525;   
+ house <- c(4.8, 3.8, 5.7); #deduct
+ food<- c(3.5, 4.3, 5.0);    #deduct
+ fun <- c(7.8, 2.1, 10.5);  #deduct
+ #and incomes (through TAships) of 
+ income <- c(21, 21, 21); #add this
+ 
+ for (j in 1:5) {
+     for (i in 1:length(bankAccounts)) {
+         #step 1 modify bankAccounts so that amounts reflect income and #expenses
+         #step 2 get calculate interest and add to accounts from step 1
+         #you can actually use the line you have already written if you
+         #modify amounts in bankAccounts directly in step 1
+     }
+ bankAccounts
+ print(bankAccounts)
+ bankAccounts <- c(10, 9.2, 5.6); 
+ for (i in bankAccounts){
+     cat(i-house[x]-food[y]-fun[z]+income[aa])
+   
+ house <- c(4.8, 3.8, 5.7); 
+ food<- c(3.5, 4.3, 5.0);    
+ fun <- c(7.8, 2.1, 10.5);  
+ income <- c(21, 21, 21); 
+ 
+ for (j in 1:5) {
+     for (i in 1:length(bankAccounts)) {
+     }
+ bankAccounts
+ bankAccounts <- c(10, 9.2, 5.6)
+ bankAccounts
+ print(bankAccounts)
+ bankAccounts <- (10, 9.2, 5.6)
Error: unexpected ',' in:
"print(bankAccounts)
bankAccounts <- (10,"
> bankAccounts <- c(10, 9.2, 5.6)
> bankAccounts
[1] 10.0  9.2  5.6
> fun
[1]  7.8  2.1 10.5
> for (i in bankAccounts){
+     cat(i-house[x])
+ }
Error in cat(i - house[x]) : object 'x' not found
> for (i in bankAccounts){
+     cat(i-house[i])
+ }
NANANA
> for (i in bankAccounts){
+     cat(i-house[])
+ }
5.2 6.2 4.34.4 5.4 3.50.8 1.8 -0.1
> for (i in len.bankAccounts){
+     cat(i-len.house[])
+ }
Error: object 'len.bankAccounts' not found
> for (i in bankAccounts){
+     cat(i-house)
+ }
5.2 6.2 4.34.4 5.4 3.50.8 1.8 -0.1
> for (i in 1:length(bankAccounts)){
+     cat(i-house)
+ }
-3.8 -2.8 -4.7-2.8 -1.8 -3.7-1.8 -0.8 -2.7
> for (i in 1:length(bankAccounts)){
+     cat(i-1:length(house))
+ }
0 -1 -21 0 -12 1 0
> for (i in bankAccounts[1:3]){
+     cat(i-house[1:3])
+ }
5.2 6.2 4.34.4 5.4 3.50.8 1.8 -0.1
> for (i in bankAccounts[1:3]){
+     cat(i-house[1:3])
+ }
5.2 6.2 4.34.4 5.4 3.50.8 1.8 -0.1
> bankAccounts - house
[1]  5.2  5.4 -0.1
> bankAccounts <- bankAccounts - house - food - fun + income
> bankAccounts
[1] 14.9 20.0  5.4
> compounded <- 0 
> for (j in 1:5) {
+     for (i in 1:length(bankAccounts)) {
+         compounded[i] <- interestRate*bankAccounts[i] + bankAccounts[i];
+     }
+ compounded
+ compounded
+ print(compounded)
+ #Unsure why this isn't showing results. 
+ #End of Exercise 6.
+ vec1 = 1:17
+ counter <- 0
+ while (vec1 %% 1){
+     cat(vec1[i]+(i+1))
+ }
+ 
+ while (vec1[i]<= 17){
+     i <- vec1[i]+vec1[i];
+     counter + 1;
+     if (counter == 18, stop)
Error: unexpected ',' in:
"    counter + 1;
    if (counter == 18,"
> }
Error: unexpected '}' in "}"
> while (vec1[i]<= 17){
+     i <- vec1[i]+vec1[i];
+     counter + 1;
+     if (counter = 18, stop)
Error: unexpected '=' in:
"    counter + 1;
    if (counter ="
> }
Error: unexpected '}' in "}"
> while (vec1[i]<= 17){
+     i <- vec1[i]+vec1[i];
+     counter + 1;
+     if (counter = 18, stop)
Error: unexpected '=' in:
"    counter + 1;
    if (counter ="
> }
Error: unexpected '}' in "}"
> #Do not understand. End of Exercise 8.
> 